pipeline {
    agent {label "DERDAPP006"}
    options {
        durabilityHint 'MAX_SURVIVABILITY'
        disableConcurrentBuilds()
        disableResume()
    }
    stages {
        stage ('getsnapshots') {
            steps {
                script {
                    properties([
                        parameters([
                            string(description: 'VirtualMachineName', defaultValue: '', name: 'VMS', trim: true),
                            string(description: 'Snapshot Name', defaultValue: '', name: 'snapshotname', trim: true),
                            [$class: 'ChoiceParameter', 
                                choiceType: 'PT_RADIO', 
                                description: 'Cleanup old snapshots', 
                                filterLength: 1, 
                                filterable: false, 
                                name: 'RUNMODE', 
                                script: [
                                    $class: 'GroovyScript', 
                                    fallbackScript: [
                                    classpath: [], 
                                    sandbox: true, 
                                    script: 
                                        "return['ERROR: Could not get RunMode']"
                                    ], 
                                    script: [
                                    classpath: [], 
                                    sandbox: true, 
                                    script: 
                                        "return['Yes:selected','No']"
                                    ]
                                ]
                            ],
                            [$class: 'ChoiceParameter', 
                                choiceType: 'PT_RADIO', 
                                description: 'Execute me', 
                                filterLength: 1, 
                                filterable: false, 
                                name: 'EXECUTEME', 
                                script: [
                                    $class: 'GroovyScript', 
                                    fallbackScript: [
                                    classpath: [], 
                                    sandbox: true, 
                                    script: 
                                        "return['ERROR: Could not get EXECUTEME']"
                                    ], 
                                    script: [
                                    classpath: [], 
                                    sandbox: true, 
                                    script: 
                                        "return['YES','NO:selected']"
                                    ]
                                ]
                            ]                            
                        ])
                    ])
                    if (EXECUTEME == "YES") {
                    pwsh '''
                        $PSStyle.OutputRendering = [System.Management.Automation.OutputRendering]::PlainText;
                        . ${env:WORKSPACE}/functions/new-snapshot.ps1
                        . ${env:WORKSPACE}/functions/remove-snapshot.ps1
                        . ${env:WORKSPACE}/functions/get-snapshot.ps1
                        if ( $env:RUNMODE -eq "YES" ) {$Clean = $true} else {$Clean = $False}
                        $env:snapshotname = $env:snapshotname.trim()
                        $env:VMS = $env:VMS.trim()
                        write-host "Start.....`n"
                        $result=new-snapshot -VirtualMachineName $env:VMS -Snapshotname $env:snapshotname -clean:$Clean -verbose
                        $result|out-string
                        write-host "....End"
                    '''
                    } else {
                        println "Execute Flag not set. Done Nothing."
                    }
                }
            }
        }
    }
}